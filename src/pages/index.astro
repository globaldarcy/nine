---
import Layout from "../layouts/Layout.astro";
import NinebotHeader from "../components/n/ninebot-header.astro";
import NinebotSubNav from "../components/n/ninebot-sub-nav.astro";
import NinebotKV from "../components/n/ninebot-kv.astro";
import NinebotNew from "../components/n/ninebot-new.astro";
import NinebotCity from "../components/n/ninebot-city.astro";
import NinebotFun from "../components/n/ninebot-fun.astro";
import NinebotAbout from "../components/n/ninebot-about.astro";
import NinebotExplore from "../components/n/ninebot-explore.astro";
import NinebotFooter from "../components/n/ninebot-footer.astro";
---

<Layout title="Welcome to Astro.">
    <main class="ninebot">
        <div class="ninebot">
            <NinebotHeader />
            <NinebotSubNav />
            <NinebotKV />
            <NinebotNew />
            <NinebotCity />
            <NinebotFun />
            <NinebotAbout />
            <NinebotExplore />
            <NinebotFooter />
        </div>
    </main>
</Layout>

<style lang="scss">
    main {
    }
</style>

<script>
    import axios from "axios";
    let isPending = true;
    const controller = new AbortController();

    async function getPage() {
        try {
            const response = await axios.get("/main", {
                signal: controller.signal,
            });
            isPending = false;
            return response.data;
        } catch (error) {
            isPending = false;
            console.error(error);
        }
    }

    let page = getPage();
    page.then((data) => {
        console.log("data", typeof data);
        if (typeof data === 'undefined') {
            return false;
        }
        const parser = new DOMParser();
        const htmlDocument = parser.parseFromString(data, "text/html");

        // 获取指定的 DOM 节点
        const targetNode = htmlDocument.querySelector(".s-exp");

        // 对节点的内容进行预加载
        targetNode.querySelectorAll("img").forEach((item) => {
            const preloadImage = new Image();
            preloadImage.src = item.src;
        });

        const currentNode = document.querySelector(".n-kv");
        if (document.querySelector(".n-kv") == null) {
            return false;
        }
        currentNode.parentNode.replaceChild(targetNode, currentNode);
    });

    const siteOne = document.querySelector(".logo-s");
    siteOne.addEventListener("click", function () {
        // getPage();
        console.log(123, isPending);
        if (isPending) {
            controller.abort("中止下载");
            console.log("中止下载");
            getPage();
        }
    });
</script>
